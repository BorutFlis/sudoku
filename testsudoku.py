import unittest
import sudoku
class KnownSudokus(unittest.TestCase):
    sudokus=[([
        [0,6,5,3,0,9,0,1,0],
        [0,0,8,0,7,6,2,0,0],
        [7,0,9,4,0,0,0,0,0],
        [6,0,0,7,0,0,0,0,1],
        [0,9,0,8,6,2,0,7,0],
        [4,0,0,0,0,1,0,0,8],
        [0,0,0,0,0,7,5,0,3],
        [0,0,4,2,9,0,1,0,0],
        [0,7,0,5,0,3,9,4,0]
        ],
        [
        [2,6,5,3,8,9,7,1,4],
        [3,4,8,1,7,6,2,5,9],
        [7,1,9,4,2,5,8,3,6],
        [6,8,2,7,5,4,3,9,1],
        [1,9,3,8,6,2,4,7,5],
        [4,5,7,9,3,1,6,2,8],
        [9,2,1,6,4,7,5,8,3],
        [5,3,4,2,9,8,1,6,7],
        [8,7,6,5,1,3,9,4,2]
        ])
    ]
    invalid_sudokus=[
        [
        [1,9,2,6,5,7,3,4,8],
        [8,3,6,4,9,2,5,7,1],
        [7,5,4,3,1,8,9,2,6],
        [6,1,5,8,4,9,7,3,2],
        [2,4,3,7,6,5,1,8,9],
        [9,7,8,2,3,1,4,6,5],
        [5,6,7,9,8,4,2,1,3],
        [4,8,1,5,2,3,6,9,7],
        [3,2,9,1,7,6,8,5,5]
        ]
        #row 9 is wrong
        ,
        [
        [5,6,2,3,8,9,7,1,4],
        [3,4,8,1,7,6,2,5,9],
        [7,1,9,4,2,5,8,3,6],
        [6,8,2,7,5,4,3,9,1],
        [1,9,3,8,6,2,4,7,5],
        [4,5,7,9,3,1,6,2,8],
        [9,2,1,6,4,7,5,8,3],
        [5,3,4,2,9,8,1,6,7],
        [8,7,6,5,1,3,9,4,2]
        ]
        #column 1 is wrong
    ]

    
    def test_solve(self):
        self.sudokus=sudoku.import_sudokus()
        #print(self.sudokus)
        for puzzle, solution in self.sudokus:
            result=sudoku.backtrack(puzzle)
            self.assertEqual(result, solution)
    




if __name__ == '__main__':
    unittest.main()
